# -*- coding: utf-8 -*-
"""Practical6_Daa_A5_B2_19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hYBGcst5e7K2x7RjAxtnczLuJ95pSvsR
"""

n = int(input())
input()
p = list(map(float, input().split()))
q = list(map(float, input().split()))

E = [[0.0 for _ in range(n + 1)] for _ in range(n + 1)]
W = [[0.0 for _ in range(n + 1)] for _ in range(n + 1)]
R = [[0 for _ in range(n + 1)] for _ in range(n + 1)]

for i in range(n + 1):
    E[i][i] = q[i]
    W[i][i] = q[i]

for d in range(1, n + 1):
    for i in range(n - d + 1):
        j = i + d
        E[i][j] = float('inf')
        W[i][j] = W[i][j - 1] + p[j - 1] + q[j]

        for k in range(i + 1, j + 1):
            cost = E[i][k - 1] + E[k][j] + W[i][j]
            if cost < E[i][j]:
                E[i][j] = cost
                R[i][j] = k

print("E Matrix (Expected Costs):")
for i in range(n + 1):
    for j in range(n + 1):
        if i > j:
            print("0.00", end=" ")
        else:
            print(f"{E[i][j]:.2f}", end=" ")
    print()

print("\nW Matrix (Weights):")
for i in range(n + 1):
    for j in range(n + 1):
        if i > j:
            print("0.00", end=" ")
        else:
            print(f"{W[i][j]:.2f}", end=" ")
    print()

print("\nR Matrix (Roots):")
for i in range(n + 1):
    for j in range(n + 1):
        print(f"{R[i][j]}", end=" ")
    print()

print(f"\nMinimum expected cost: {E[0][n]:.4f}")

